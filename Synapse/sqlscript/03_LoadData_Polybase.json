{
	"name": "03_LoadData_Polybase",
	"properties": {
		"content": {
			"query": "-- You can run these scripts using SSMS too\n\n-- 1. Create a master key for the Sample database. You only need to create a master key once per database.\n\nCREATE MASTER KEY;\n\n-- 2. Define the location of the Azure blob. This is the location of the external worldwide importers data.\nCREATE EXTERNAL DATA SOURCE WWIStorage_Hadoop\nWITH\n(\n    TYPE = Hadoop,\n    LOCATION = 'wasbs://wideworldimporters@sqldwholdata.blob.core.windows.net'\n);\n\nCREATE EXTERNAL DATA SOURCE WWIStorage_Native\nWITH\n(\n    LOCATION = 'wasbs://wideworldimporters@sqldwholdata.blob.core.windows.net'\n);\n-- 3. Create external file formart. specify the formatting characteristics and options for the external data file. \n--This statement specifies the external data is stored as text and the values are separated by the pipe ('|') character\nCREATE EXTERNAL FILE FORMAT TextFileFormat \nWITH \n(   \n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS\n     (   \n         FIELD_TERMINATOR = '|',\n        USE_TYPE_DEFAULT = FALSE \n    )\n);\n\n--4. Create a schema for external file format. and Data tables\nCREATE SCHEMA ext;\nGO\nCREATE SCHEMA wwi;\n\n--5. Create external tables\n\nCREATE EXTERNAL TABLE [ext].[dimension_City_Native](\n\t[City Key] [int] NOT NULL,\n\t[WWI City ID] [int] NOT NULL,\n\t[City] [nvarchar](50) NOT NULL,\n\t[State Province] [nvarchar](50) NOT NULL,\n\t[Country] [nvarchar](60) NOT NULL,\n\t[Continent] [nvarchar](30) NOT NULL,\n\t[Sales Territory] [nvarchar](50) NOT NULL,\n\t[Region] [nvarchar](30) NOT NULL,\n\t[Subregion] [nvarchar](30) NOT NULL,\n\t[Location] [nvarchar](76) NULL,\n\t[Latest Recorded Population] [bigint] NOT NULL,\n\t[Valid From] [datetime2](7) NOT NULL,\n\t[Valid To] [datetime2](7) NOT NULL,\n\t[Lineage Key] [int] NOT NULL\n)\nWITH (LOCATION='/v1/dimension_City/',   \n    DATA_SOURCE = WWIStorage,  \n    FILE_FORMAT = TextFileFormat,\n \tREJECT_TYPE = VALUE,\n    REJECT_VALUE = 0\n);  \n\nselect * from [ext].[dimension_City_Native]\n-- performance of Hadoop is better\nCREATE EXTERNAL TABLE [ext].[dimension_City](\n\t[City Key] [int] NOT NULL,\n\t[WWI City ID] [int] NOT NULL,\n\t[City] [nvarchar](50) NOT NULL,\n\t[State Province] [nvarchar](50) NOT NULL,\n\t[Country] [nvarchar](60) NOT NULL,\n\t[Continent] [nvarchar](30) NOT NULL,\n\t[Sales Territory] [nvarchar](50) NOT NULL,\n\t[Region] [nvarchar](30) NOT NULL,\n\t[Subregion] [nvarchar](30) NOT NULL,\n\t[Location] [nvarchar](76) NULL,\n\t[Latest Recorded Population] [bigint] NOT NULL,\n\t[Valid From] [datetime2](7) NOT NULL,\n\t[Valid To] [datetime2](7) NOT NULL,\n\t[Lineage Key] [int] NOT NULL\n)\nWITH (LOCATION='/v1/dimension_City/',   \n    DATA_SOURCE = WWIStorage_Hadoop,  \n    FILE_FORMAT = TextFileFormat,\n \tREJECT_TYPE = VALUE,\n    REJECT_VALUE = 0\n);  \n\nCREATE EXTERNAL TABLE [ext].[dimension_Customer] (\n\t[Customer Key] [int] NOT NULL,\n\t[WWI Customer ID] [int] NOT NULL,\n\t[Customer] [nvarchar](100) NOT NULL,\n\t[Bill To Customer] [nvarchar](100) NOT NULL,\n   \t[Category] [nvarchar](50) NOT NULL,\n\t[Buying Group] [nvarchar](50) NOT NULL,\n\t[Primary Contact] [nvarchar](50) NOT NULL,\n\t[Postal Code] [nvarchar](10) NOT NULL,\n\t[Valid From] [datetime2](7) NOT NULL,\n\t[Valid To] [datetime2](7) NOT NULL,\n\t[Lineage Key] [int] NOT NULL\n)\nWITH (LOCATION='/v1/dimension_Customer/',   \n    DATA_SOURCE = WWIStorage_Hadoop,  \n    FILE_FORMAT = TextFileFormat,\n \tREJECT_TYPE = VALUE,\n    REJECT_VALUE = 0\n);\n\n-- 5. check the created objects\n\n-- 6. Load data using CTAS\n\nCREATE TABLE [wwi].[dimension_City]\nWITH\n( \n    DISTRIBUTION = REPLICATE,\n    CLUSTERED COLUMNSTORE INDEX\n)\nAS\nSELECT * FROM [ext].[dimension_City]\nOPTION (LABEL = 'CTAS : Load [wwi].[dimension_City]');\n\nCREATE TABLE [wwi].[dimension_Customer]\nWITH\n( \n    DISTRIBUTION = REPLICATE,\n    CLUSTERED COLUMNSTORE INDEX\n)\nAS\nSELECT * FROM [ext].[dimension_Customer]\nOPTION (LABEL = 'CTAS : Load [wwi].[dimension_Customer]');\n\n--7 Monitor status of the load in the next script\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "SQLPool01",
				"poolName": "SQLPool01"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}