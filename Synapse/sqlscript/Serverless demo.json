{
	"name": "Serverless demo",
	"properties": {
		"content": {
			"query": "/* As you can see you are connected to the built in Sql, the default database is master */\n\n-- 1. Quick data exploration\n\n-- This is auto-generated code, that you can generate it by right click (json, csv, Parquet)\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://asadatalakemarysynapse.dfs.core.windows.net/blobroot/nyctaxistaging/Fact/yellow_tripdata_2018-01.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n\n-- You can define result schema at query time in WITH clause, No need for external format files, and improve performance by column elimination for parquet\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://asadatalakemarysynapse.dfs.core.windows.net/blobroot/nyctaxistaging/Dimension/PaymentType.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n\t    FIELDTERMINATOR = '|',\n        FIRSTROW=2\n        )\n        WITH(\n            id INT,\n            paymentType varchar(20)\n        )\n    AS [result]\n\n -- access data from multiple files  , and apply transformation  \n\nSELECT YEAR(tpep_pickup_datetime) as [year],\n              SUM(cast(passenger_count as int)) AS passengers_total,\n              COUNT(*) AS [rides_total] \nFROM OPENROWSET( \n           BULK 'https://asadatalakemarysynapse.dfs.core.windows.net/blobroot/nyctaxistaging/Fact/*.parquet', \n           FORMAT = 'PARQUET')  AS nyc \nGROUP BY YEAR(tpep_pickup_datetime) \nORDER BY YEAR(tpep_pickup_datetime) \n\n\n--2. Logical Data Warehouse\n-- In this part with build logical relational layer on top of physical files in Azure Storage. you can create other database with create database syntax\n-- serverless has only metadata  data stores in the storage\n\nCreate Database NYCTaxi_Serverless_DW1;\n\nUSE NYCTaxi_Serverless_DW\nGO\n\nDROP VIEW IF EXISTS  TripCountView\nGO\nCREATE VIEW TripCountView AS\nSELECT YEAR(tpep_pickup_datetime) as [year],\n              SUM(cast(passenger_count as int)) AS passengers_total,\n              COUNT(*) AS [rides_total] \nFROM OPENROWSET( \n           BULK 'https://asadatalakemarysynapse.dfs.core.windows.net/blobroot/nyctaxistaging/Fact/*.parquet', \n           FORMAT = 'PARQUET')  AS nyc \nGROUP BY YEAR(tpep_pickup_datetime) \n\nselect * from  TripCountView\n-- a.create Masterkey\n-- b.create databasescoped credentials\n-- c.create file format\n-- d.create external tables \nCREATE MASTER KEY;\n\n--Credential used to authenticate to External Data Source \nCREATE DATABASE SCOPED CREDENTIAL AzureStorageCredential\nWITH\n    IDENTITY = 'Managed Identity';\n   \n--Describes where the data is located at a coarse grain\n--This will be on the nycstaging container that were created in Module 1's lab where the datasets are uploaded to Data Lake folders\nCREATE EXTERNAL DATA SOURCE NYTBlob\nWITH\n(\n    LOCATION = 'wasbs://blobroot@asadatalakemarysynapse.blob.core.windows.net/',\n\tCREDENTIAL = AzureStorageCredential\n);\n\n--File formats describes how the files are written\n--We will load one file which is a fact table. This will be an uncompressed file. \nCREATE EXTERNAL FILE FORMAT csvfact\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS ( \n\tFIELD_TERMINATOR = ',',\n        STRING_DELIMITER = '',\n        USE_TYPE_DEFAULT = False,\t\t\n\t\tFIRST_ROW = 3\n    )\n);\n-- You can't define not null/null columns\nCREATE EXTERNAL TABLE [Fact_Trips]\n(\n    [VendorID] varchar(10) ,\n    [tpep_pickup_datetime] datetime,\n    [tpep_dropoff_datetime] datetime ,\n    [passenger_count] int ,\n    [trip_distance] float ,\n    [RateCodeID] int ,\n    [store_and_fwd_flag] varchar(3) ,\n    [PULocationID] int ,\n    [DOLocationID] int ,\n    [payment_type] int ,\n    [fare_amount] money ,\n    [extra] money ,\n    [mta_tax] money ,\n    [tip_amount] money ,\n    [tolls_amount] money ,\n    [improvement_surcharge] money ,\n    [total_amount] money \n)\nWITH\n(\n    LOCATION = 'nyctaxistaging/Fact/yellow_tripdata_2018-12.csv',\n    DATA_SOURCE = NYTBlob,\n    FILE_FORMAT = csvfact\n);\n\n-- create statistics\nCREATE STATISTICS stat_PULocationID ON Fact_Trips(PULocationID);\n\n-- grant permission\n\n-- select \nselect top(10) * from fact_trips\n\n--3. Easy data transformation\n-- Create external tables as select (CETAS) enables you to easily transform data \n-- and store the results of query on Azure storage e.g. convert csv file to parquet\n\nCREATE EXTERNAL FILE FORMAT csvdimension\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS ( \n\tFIELD_TERMINATOR = '|',\n        STRING_DELIMITER = '',\n        USE_TYPE_DEFAULT = False,\t\t\n\t\tFIRST_ROW = 2\n    )\n);\n\nCREATE EXTERNAL FILE FORMAT ParquetFormat\n WITH (  FORMAT_TYPE = PARQUET );\n\n\nCREATE EXTERNAL TABLE [Vendor_csv]\n(\n    [VendorID] int ,\n    [Description] varchar(40) \n)\nWITH\n(\n    LOCATION = 'nyctaxistaging/Dimension/Vendor.csv',\n    DATA_SOURCE = NYTBlob,\n    FILE_FORMAT = csvdimension\n);\n\n\nCREATE EXTERNAL TABLE vendor_parquet  \nWITH(   \n        LOCATION = 'nyctaxistaging/Dimension',  \n        DATA_SOURCE = NYTBlob,  \n        FILE_FORMAT = ParquetFormat )  \nAS SELECT VendorID,Description\nFROM Vendor_csv\n\n\n\n\n-- Automatic syncing of Spark tables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "wplussynapsedw",
				"poolName": "wplussynapsedw"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}